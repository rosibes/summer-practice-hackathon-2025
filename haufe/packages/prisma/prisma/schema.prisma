// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  username     String
  password     String
  name         String?
  bio          String?
  isAdmin      Boolean       @default(false)
  avatarUrl    String?
  projects     Project[]
  comments     Comment[]
  improvements Improvement[]
  tasks        Task[]
}

model Project {
  id            String        @id @default(uuid())
  title         String
  description   String?
  repositoryUrl String?
  status        String        @default("pending")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  comments      Comment[]
  improvements  Improvement[]
  tasks         Task[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Improvement {
  id          String   @id @default(uuid())
  title       String
  description String
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Task {
  id           String    @id @default(uuid())
  title        String
  description  String?
  status       String    @default("pending")
  dueDate      DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  projectId    String
  project      Project   @relation(fields: [projectId], references: [id])
  assignedToId String
  assignedTo   User      @relation(fields: [assignedToId], references: [id])
}
